openapi: 3.1.0
info:
  title: Literary Quotes API
  description: Access literary quotes from a curated public domain database. This API allows you to fetch quotes by various parameters, including author, work, and genre, with support for complex queries, sorting, and pagination.
  version: 1.0.0

servers:
  - url: http://localhost:3000

paths:
  /quotes:
    get:
      summary: Retrieve a list of quotes
      description: Fetch a list of quotes from the curated database. Supports filtering, sorting, and pagination.
      operationId: getQuotes
      tags:
        - quotes
      parameters:
        - $ref: '#/components/parameters/AuthorParam'
        - $ref: '#/components/parameters/AuthorLikeParam'
        - $ref: '#/components/parameters/AuthorIdParam'
        - $ref: '#/components/parameters/WorkParam'
        - $ref: '#/components/parameters/WorkLikeParam'
        - $ref: '#/components/parameters/WorkIdParam'
        - $ref: '#/components/parameters/CategoryParam'
        - $ref: '#/components/parameters/FieldsParam'
        - $ref: '#/components/parameters/GenreParam'
        - $ref: '#/components/parameters/PublishDateParam'
        - $ref: '#/components/parameters/QuoteLengthParam'
        - $ref: '#/components/parameters/QuoteLengthGteParam'
        - $ref: '#/components/parameters/QuoteLengthLteParam'
        - $ref: '#/components/parameters/QuoteLikeParam'
        - $ref: '#/components/parameters/SortParam'
        - $ref: '#/components/parameters/OrderParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/PageParam'
      responses:
        '200':
          $ref: '#/components/responses/QuotesResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '400':
          $ref: "#/components/responses/InvalidParameterError"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '401':
          $ref: '#/components/responses/InvalidCredentialsError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/TooManyRequestsError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /quotes/random:
    get:
      security:
        - basicAuth: []
      summary: Retrieve a random quote
      description: Fetch a random quote from the curated database. Supports filtering by author, category, genre, and keywords in the quote.
      operationId: getRandomQuote
      tags:
        - random
      parameters:
        - $ref: '#/components/parameters/AuthorParam'
        - $ref: '#/components/parameters/CategoryParam'
        - $ref: '#/components/parameters/GenreParam'
        - $ref: '#/components/parameters/QuoteLikeParam'
        - $ref: '#/components/parameters/FieldsParam'
      responses:
        '200':
          $ref: '#/components/responses/RandomQuoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '400':
          $ref: "#/components/responses/SyntaxError"
        '400':
          $ref: "#/components/responses/InvalidParameterError"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '401':
          $ref: '#/components/responses/InvalidCredentialsError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/TooManyRequestsError'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  parameters:
    AuthorParam:
      name: author
      in: query
      description: Filter quotes by the author's name. Use for exact name matching.
      required: false
      schema:
        type: string
    AuthorLikeParam:
      name: author_like
      in: query
      description: Filter quotes by the author's name with partial matching. Supports searching by first name, last name, or both.
      required: false
      schema:
        type: string
    AuthorIdParam:
      name: author_id
      in: query
      description: Filter quotes by the author's ID.
      required: false
      schema:
        type: integer
    WorkParam:
      name: work
      in: query
      description: Filter quotes by the work's title. Use for exact title matching.
      required: false
      schema:
        type: string
    WorkLikeParam:
      name: work_like
      in: query
      description: Filter quotes by the work's title with partial matching. Supports searching by one or more words in the title.
      required: false
      schema:
        type: string
    WorkIdParam:
      name: work_id
      in: query
      description: Filter quotes by the work's ID.
      required: false
      schema:
        type: integer
    CategoryParam:
      name: category
      in: query
      description: Filter quotes by the work's category.
      required: false
      schema:
        type: string
        enum:
          - Fiction
          - Nonfiction
    FieldsParam:
      name: fields
      in: query
      description: Comma-separated list of fields to include in the response. If not specified, all fields are returned.
      required: false
      schema:
        type: string
      example: "id,author,work,source,quote"
    GenreParam:
      name: genre
      in: query
      description: Filter quotes by the work's literary genre.
      required: false
      schema:
        $ref: "#/components/schemas/Genres"
    PublishDateParam:
      name: publish_date
      in: query
      description: Filter quotes by publication date.
      required: false
      schema:
        $ref: "#/components/schemas/PublishDate"
    QuoteLengthParam:
      name: quote_length
      in: query
      description: Filter quotes by an exact character length.
      schema:
        type: integer
    QuoteLengthGteParam:
      name: quote_length_gte
      in: query
      description: Filter quotes greater than or equal to the specified character value.
      required: false
      schema:
        type: integer
    QuoteLengthLteParam:
      name: quote_length_lte
      in: query
      description: Filter quotes less than or equal to the specified character value.
      required: false
      schema:
        type: integer
    QuoteLikeParam:
      name: quote_like
      in: query
      description: Filter quotes by the work's title with partial matching. Supports searching by one or more keywords in the quote.
      required: false
      schema:
        type: string
    SortParam:
      name: sort
      in: query
      description: Comma-separated list of fields to sort the results by. If not specified, the default is to sort by the `id` property of the Quote objects.
      required: false
      schema:
        type: string
        default: id
    OrderParam:
      name: order
      in: query
      description: The sorting order of the returned Quote objects, ascending or descending. Applies to all fields specified in `sort`. If not provided, the default is ascending order.
      required: false
      schema:
        type: string
        enum:
            - asc
            - desc
        default: asc
    LimitParam:
      name: limit
      in: query
      description: The numbers of quotes to return per page.
      required: false
      schema:
        type: integer
        default: 5
    PageParam:
      name: page
      in: query
      description: The number of quotes to skip before starting to return quotes.
      required: false
      schema:
        type: integer
        default: 1

  schemas:
    Quote:
      type: object
      description: A quote from a literary work.
      properties:
        id:
          type: integer
          description: The unique identifier for the quote.
        author:
          type: string
          description: The name of the author.
        author_id:
          type: integer
          description: The unique identifier for the author.
        work:
          type: string
          description: The title of the literary work.
        work_id:
          type: integer
          description: The unique identifier for the literary work.
        category:
          type: string
          enum:
            - Fiction
            - Nonfiction
          description: The category of the literary work.
        genre:
          $ref: "#/components/schemas/Genres"
        publish_date:
          $ref: "#/components/schemas/PublishDate"
        quote_length:
          type: integer
          description: The character length of the quote.
        source:
          type: string
          format: uri
          description: The URL or the resource where the quote was sourced.
        quote:
          type: string
          description: The text of the quote.

    Genres:
      type: array
      description: The genre(s) of the literary work.
      items:
        type: string
        enum:
          - "Adventure"
          - "Biography"
          - "Children’s"
          - "Dystopian"
          - "Essays"
          - "Fantasy"
          - "Feminism"
          - "Historical"
          - "History"
          - "Horror"
          - "Humanities"
          - "Humor"
          - "Literary"
          - "Modernist"
          - "Mystery"
          - "Philosophy"
          - "Romance"
          - "Science"
          - "Sci-Fi"
          - "Self-help"
          - "Spirituality"
          - "Women’s"

    PublishDate:
      type: string
      description: A date that can represent full dates (YYYY-MM-DD), years (YYYY), 1- to 3-digit BCE years (for example, 800 BCE), and 1- to 3-digit CE years (for example, 300 CE or 300).
      pattern: ^(\d{4}-\d{2}-\d{2}|\d{4}|\d{1,3}( CE)?|\d{1,3} BCE)$
      examples:
        Full date:
          value: "1892-10-14"
        Year only:
          value: "1954"
        CE year:
          value: "180 CE"
        Short CE year:
          value: "300"
        BCE year:
          value: "800 BCE"

    Pagination:
      type: object
      description: Provides metadata for paginated quote results.
      properties:
        current_page:
          type: integer
          description: The current page number.
        page_size:
          type: integer
          description: The number of items per page.
        total_count:
          type: integer
          description: The total number of items.
        total_pages:
          type: integer
          description: The total number of pages.

    Error:
      type: object
      properties:
        code:
          type: integer
          description: The HTTP status code for the error.
        error:
          type: string
          description: A machine-parsable string representing the error.
        details:
          type: string
          description: A human-readable explanation of the error with more information.

  responses:
    QuotesResponse:
      description: A successful response containing a list of quotes and pagination details.
      headers:
        X-Page-Size:
          description: The number of items per page.
          schema:
            type: integer
        X-Page:
          description: The current page number.
          schema:
            type: integer
        X-Total-Count:
          description: The total number of items available in the database.
          schema:
            type: integer
        X-Total-Pages:
          description: The total number of pages.
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: object
            properties:
              quotes:
                type: array
                items:
                  $ref: "#/components/schemas/Quote"
              pagination:
                $ref: "#/components/schemas/Pagination"
          example:
            quotes:
              id: 41
              author: "Mark Twain"
              author_id: 4
              work: "Roughing It"
              work_id: 37
              category: "Nonfiction"
              genre:
                - "Humor"
                - "Travel"
              publish_date: "1872-01-01"
              quote_length: 68
              source: "https://www.gutenberg.org/ebooks/3177"
              quote: "Courage is resistance to fear, mastery of fear, not absence of fear."
            pagination:
              current_page: 8
              page_size: 5
              total_count: 47
              total_pages: 9


    RandomQuoteResponse:
      description: A successful response containing a random quote.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Quote"
          example:
            quote:
              id: 41
              author: "Mark Twain"
              author_id: 4
              work: "Roughing It"
              work_id: 37
              category: "Nonfiction"
              genre:
                - "Humor"
                - "Travel"
              publish_date: "1872-01-01"
              quote_length: 68
              source: "https://www.gutenberg.org/ebooks/3177"
              quote: "Courage is resistance to fear, mastery of fear, not absence of fear."

    BadRequestError:
      description: Returned on bad requests.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            error: bad_request
            details: The request could not be understood. This could be due to incorrect syntax or a missing key or value in the query parameters. Check your query string for errors.

    InvalidParameterError:
      description: Returned when a query paramater is invalid.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            error: invalid_query_parameter
            details: Invalid query parameter. Make sure your query parameters are correct. Allowed parameters are {list_of_allowed_parameters}.

    UnauthorizedError:
      description: Returned when authentication fails.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            error: unauthorized
            details: Authentication failed. Make sure your request includes the Authorization header and that you're using the correct Base64-encoded username and password.

    InvalidCredentialsError:
      description: Returned when authentication fails because the credentials aren't in username:password format.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            error: invalid_credential_format
            details: Invalid credential format. Make sure your credentials are in "username:password" format before you encode them.

    NotFoundError:
      description: Returned when the requested resource is not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            error: not_found
            details: No quotes match the provided parameters. The resource might not exist or is unavailable.

    TooManyRequestsError:
      description: Returned when the rate limit has been exceeded.
      headers:
        Retry-After:
          description: Indicates how long the client needs to wait before making another request.
          schema:
            type: integer
          example: 60
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 429
            error: too_many_requests
            details: You have exceeded the maximum number of requests. The limit will reset in 60 seconds and you can try again.

    InternalServerError:
      description: Returned when an unexpected error occurs on the server.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 500
            error: internal_server_error
            details: An unexpected error occurred. Please try again later. If the problem persists, contact Support.
